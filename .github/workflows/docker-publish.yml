name: Docker

on:
  schedule:
    - cron: '38 3 * * *'
  push:
    branches:
      - "17.0"
      - "18.0"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository on current branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Build Docker image for testing (linux/amd64 only)
#        id: build
#        uses: docker/build-push-action@v5
#        with:
#          context: ./src
#          build-args: |
#            ODOO_VERSION=${{ github.ref_name }}
#          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-test
#          push: false
#          load: true
#
#      - name: Run unit tests
#        working-directory: tests
#        env:
#          TESTS_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-test
#          SKIP_BUILD: true
#        run: ./unit-tests.sh

  build-and-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        branch: [ "17.0", "18.0" ]
      fail-fast: false
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository on branch ${{ matrix.branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.8.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push multi-arch Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./src
          platforms: linux/amd64,linux/arm64
          build-args: |
            ODOO_VERSION=${{ matrix.branch }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.branch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
