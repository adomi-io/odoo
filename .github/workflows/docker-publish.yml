name: Docker

on:
  workflow_dispatch:
  schedule:
    - cron: '38 3 * * *'
  push:
    branches:
      - "17.0"
      - "18.0"
    paths:
      - '**'
      - '!README.md'

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME: ${{ github.repository }}
  SKIP_UNIT_TESTS: true
  TARGET_PLATFORMS: amd64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [ "18.0", "17.0" ]
      fail-fast: false
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository on branch ${{ matrix.branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for testing
        id: build
        if: env.SKIP_UNIT_TESTS != 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./src
          build-args: |
            ODOO_VERSION=${{ matrix.branch }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.branch }}-test
          push: false
          load: true

      - name: Run unit tests
        working-directory: tests
        if: env.SKIP_UNIT_TESTS != 'true'
        env:
          TESTS_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.branch }}-test
          SKIP_BUILD: true
        run: ./unit-tests.sh

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME}}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Extract Docker metadata
        if: github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=pr
            type=ref,event=branch
            type=raw,value=${{ matrix.branch }},enable=true
            type=raw,value=latest,enable=${{ matrix.branch == '18.0' }}
            type=raw,value=nightly,enable=${{ github.event_name == 'schedule' }}
      - name: Build and push multi-arch Docker image
        if: github.event_name != 'pull_request'
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./src
          platforms: ${{ env.TARGET_PLATFORMS }}
          build-args: |
            ODOO_VERSION=${{ matrix.branch }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
          cache-to: |
            type=local,dest=/tmp/.buildx-cache
          push: true
